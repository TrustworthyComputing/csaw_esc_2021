from pytransform import pyarmor_runtime
pyarmor_runtime()
__pyarmor__(__name__, __file__, b'\x50\x59\x41\x52\x4d\x4f\x52\x00\x00\x03\x0a\x00\x6f\x0d\x0d\x0a\x06\x29\xa0\x01\x00\x00\x00\x00\x01\x00\x00\x00\x40\x00\x00\x00\x61\x05\x00\x00\x00\x00\x00\x08\x1a\x4c\x3a\x25\xc5\x16\xc4\xa5\x69\xb0\x1f\xd1\xda\xb9\x5b\xc3\x00\x00\x00\x00\x00\x00\x00\x00\xf0\x42\xf7\x91\xeb\x9e\x0d\x58\xb2\x2b\xb2\x86\xd0\x60\x57\x86\x0f\x97\x06\x51\xd7\x6d\x8b\x4e\x5e\x35\x66\x62\x07\xc7\xcf\xa3\xb1\xd2\x77\x27\x64\xd1\xc1\x67\xb7\x2b\xa8\xd9\x00\x08\xfe\x43\x8b\xf0\xae\x38\x94\xa2\x42\x8f\xaf\x1d\x1d\xf9\x6b\x10\x30\xe5\x61\xd6\x45\xab\xef\x9f\x7f\x13\x32\xf0\x01\xd3\xa7\x26\x35\xd5\x46\x79\xf7\x40\xbb\x75\x0b\x25\xcf\x4c\x2b\x56\xf7\x05\xce\x36\x80\x55\x3c\xb3\xe2\x5a\x59\x1e\x44\x17\xdc\x13\x92\x24\x41\xab\xb5\xfb\x40\xb3\x3f\x44\x31\x62\xc3\xc2\x62\x27\x78\xb9\xa0\xd6\x2e\x9a\x8e\x23\x80\x3c\x8b\xcb\x9d\x83\xf4\x65\x24\x9a\x94\x06\xf1\xf1\x6c\xf6\x78\xe3\x88\x65\x8d\xec\x9f\xde\x3c\x17\xcb\x31\xb7\xa5\xcb\x04\xd8\x24\x7d\xcc\x0d\x8f\x3e\x15\x41\xdc\xc2\xc5\x4b\x1b\x50\x82\x8c\x08\xd8\x61\x3f\x05\xc9\x4e\x31\x9f\xaf\x8f\x7f\xa3\xd8\x7e\xeb\x9b\x0f\x7d\x1b\x83\xac\xdc\x3d\x86\xef\x58\xac\x1f\xf1\xab\x96\x11\x3e\xfe\xae\x44\xd1\x86\xc1\xc3\x7a\x39\x05\x59\xbe\x14\xa8\x13\x8a\xf6\xdc\xf0\xea\x3a\x91\x42\xfb\x18\x88\xa5\x2b\x4a\xd5\x22\x5c\xbb\x7e\x1f\x00\x90\xff\x32\x76\xd6\x0d\xb6\x7b\x0e\xec\xc0\x82\xdb\x26\x58\x76\x49\xba\x98\x72\xeb\xf2\x86\xcd\x2c\xfc\x1b\xe2\x62\x86\x1f\x08\x7e\x55\xa3\x53\x0c\x32\x14\x69\x14\x32\x96\x7d\x6b\x12\x91\x58\xf0\x42\xe6\x45\xf9\xc8\x7b\x7f\x39\x8c\xb6\x02\xea\x47\x80\xb3\x02\xea\x36\xd5\xad\x11\xe6\x08\xfb\x9f\x8b\x7c\x07\x59\x07\x6b\x2d\x71\xe0\x4a\x47\x1e\xd7\x5a\x81\xe7\xf6\x87\x3b\x6b\xce\x37\xaf\x9c\x8b\xdb\x15\x6d\xf1\x8a\x84\x1a\xac\xf2\x22\x20\x52\xb7\x96\x8c\x8b\xae\xa2\xa9\x31\xb5\x46\x23\x3a\x7b\x6d\xf3\xfa\x7e\x73\xe3\x37\x47\x38\x08\x53\xc1\x2c\x7d\x90\x92\x53\x28\xfe\x7a\xfd\x91\x96\x04\x6d\xe5\x1b\x7b\x7a\x74\x43\xdf\x92\x3f\x3e\x91\x95\xe7\x63\x03\x94\x6f\xdb\x6a\x28\x28\x26\xb4\xb2\x87\x62\x1f\x4d\xda\xb7\x79\xfd\x0a\x07\x1a\x35\x63\xab\x15\x9d\xf8\x15\x44\xfc\x04\xd0\x11\xa7\xda\x5e\x31\x8f\xe4\xa3\x83\x98\xf1\x8e\x3b\x7f\xfe\x56\x27\x10\x07\x83\xb2\x23\x16\xfb\x2d\x1a\xd8\x4d\xe3\xa3\xf0\x5c\x3b\x14\xb9\xf3\x56\x87\xe3\x3b\xcc\x7e\x2c\x57\xb6\xdb\xbf\xf0\x22\x56\xd3\xba\xf3\x19\x54\x28\xca\xeb\xaf\x2d\xc3\x12\x75\x93\xc4\x25\xc8\xbb\x73\xdb\x92\x12\xb0\x12\x83\x2a\x05\x09\xa4\x3b\x51\xbb\xd9\xf3\x33\xe1\xfa\xeb\x9e\x1d\x54\x64\x88\x4a\xc9\x76\x5c\xb0\x46\x98\xb7\x2d\x2c\xd8\x8e\x86\x05\x6e\x25\x7e\x50\xa5\x28\x77\x99\x0e\x02\x0e\x37\x38\x36\x6c\xe5\x13\x6f\x66\xe2\xc4\xe4\x6b\xdb\x77\x6f\x77\x5a\x35\x88\x25\x25\x6a\x0d\xe7\x43\x7c\x1f\x3e\xc1\x82\x86\x4d\xf3\x94\x8a\x13\xd2\x73\x9c\x93\x98\xf3\x85\x0c\xac\x0f\x05\xb0\x06\xde\x81\x70\xde\x2a\x09\x10\x7e\x33\xdf\xa5\xa8\x16\x54\xef\x5c\x84\x6f\xae\x1b\xa9\x64\xfb\x8a\x02\xb0\x39\x63\x03\x1f\x2b\xa5\xc7\x00\x24\x30\xfc\x1d\x49\xfa\xce\xaa\x78\x9a\xbc\x43\x75\x2d\x1b\x0d\xc8\x5e\xac\xda\x39\xac\xda\x7a\xed\x48\x14\x27\xac\xc0\xaa\x0a\xf6\xe7\x73\x87\xf4\x40\xb7\x7b\xc7\x40\xf8\x6a\x32\xd3\x8f\xe1\xa1\xa9\x47\x11\xdb\xaf\xe8\xfb\xa3\xfb\x2d\xb8\x6d\x74\x62\x8a\x7b\x8b\x1b\x8e\xfe\xe0\x89\x50\x58\x1c\x04\xd1\x5e\x04\xd6\xea\x95\x5c\x1a\xe1\xf7\x60\x0a\x85\x44\x98\xd8\xc5\xc8\x2d\x76\xbb\x70\x83\xdf\x51\xa2\x62\x53\x20\xe4\x8c\xcc\xc7\x37\x23\xe5\xba\x10\x0e\xd4\xa1\x1c\xcf\xab\xa2\xf4\xe8\x2c\x93\x3e\x81\xfa\xda\x6d\x65\x2d\xaa\xbd\xbd\x03\x0c\x31\xdf\xf6\xd9\xb5\x0a\x1e\xb7\x6d\x04\x19\x5c\x90\x7e\xe4\x3e\x12\x8b\x27\x9f\x58\x9a\x2d\xe9\x16\x55\x88\x8c\x43\x4d\xfb\x84\x6a\x97\x36\x79\xb9\xed\x9b\x75\xf4\x24\xac\x93\xa6\x8a\x25\x9f\xa5\xeb\xd0\xb5\xc1\x19\x93\x09\x36\xcd\x34\xad\x0f\x0e\x95\x0d\xcc\x52\x88\x67\x6a\x3a\xc1\x90\x4a\x69\xf9\xb6\xa3\xa0\x16\xc8\xc5\xa6\xf3\x38\x79\x93\x89\x8c\x83\xde\x65\x85\x06\xcb\x04\x64\x9a\xa9\xd8\xf4\x52\x0c\x5a\x73\x03\xe0\xab\x0a\x18\x41\x69\xb9\x05\xcd\x54\xb9\xff\x06\x0b\x24\x75\x08\x7b\x77\x06\x18\xdb\x66\x13\xe5\xfa\x56\x85\x47\xe9\x8a\x36\xee\xcd\x68\x7f\xb4\xb5\x40\xc5\xde\xcc\x48\xf3\x2b\x80\xd4\x29\x40\x70\xdb\xa6\xef\x84\x27\xb2\x85\x71\xd4\x2c\x56\x47\xb0\x4e\xa1\x08\x67\x4e\x18\xc9\xf9\x72\x5d\x83\xde\x5c\x8a\x07\x1f\xea\x3e\xb3\x9a\xac\x8e\x15\x35\x48\x8f\x34\x8b\x04\x3a\xd8\x77\x7f\x2d\xde\xed\x8b\x2f\x98\x69\x98\x8c\xe0\x8c\xcd\x97\xd5\x80\xe1\xd2\xd4\x80\x09\xa9\xf7\x6d\xd8\xba\xdd\x0c\x64\x60\x47\x1c\xca\x87\xa8\x69\x55\x59\x98\x0c\x95\x35\x25\x02\xbd\xab\x93\x4c\x71\x23\x21\x19\xe0\x46\x39\x41\xf3\x4b\x4d\x66\xc3\x27\x40\x51\x6b\x65\x1e\x58\xd9\x64\xa7\xc4\xb6\x81\xb2\x53\x52\x9a\x2c\x9a\xea\x3e\x42\x62\x49\x04\x7e\xd0\xc1\x9d\xd1\x2e\x74\x08\x0f\x15\x2e\xe7\x6b\x12\x1c\x1b\xed\xb7\x64\x0c\xbf\x40\xfc\xca\x53\x5c\x8e\xd6\xf2\x59\x27\x79\xbc\x94\x53\x12\x28\x11\x58\x47\xd3\xd3\x64\x3a\xed\x8b\x9d\x1a\x82\x68\xd6\xb5\xa7\xb7\xe6\x89\x2a\xf4\x46\x4d\xb6\xb1\x52\x01\x38\xcf\x4d\xc9\x3f\x56\x9d\xca\x4c\xa4\xbd\x6d\xb7\x9a\xba\x25\x46\x7f\x82\x50\x87\x9d\xd9\x29\xb7\x7d\x19\xb1\x49\x50\xeb\x3a\x7b\x70\xc9\x0f\x14\xa9\x99\x53\xd8\x15\x74\x5b\xd8\x0e\xbd\xb4\x05\x2a\x77\xf2\x7a\xfb\xc3\x14\xb5\xe2\x1a\x3d\x53\x10\x42\x49\x38\x58\x55\xcb\xe0\xe2\x39\x4c\x2f\x10\x6f\x92\x73\xa9\x2d\x6d\x95\xed\x28\x53\xd9\x20\x2a\xd1\xca\xaa\xca\xd2\x5d\x7d\xac\x83\x89\xfb\x95\x21\x42\xa3\x2f\x7c\x2a\xf0\x40\x33\x5c\x70\x01\x73\x32\xff\x6a\xbf\x52\xc1\xad\x4c\x30\x81\x5a\x47\x7e\xb3\xfd\x9d\xc2\xd6\x04\x5a\xf9\x28\x78\xc8\xc8\x7e\x86\x91\xa9\x60\x4b\x40\x33\x56\x2b\x6d\x48\x18\xfc\xb8\x37\xa5\x77\x50\xd0\xee\xa1\x7b\xa1\x02\xde\x03\xd2\x51\x92\x81\x67\x59\x99\x88\xd4\x9a\x5c\xee\xde\x55\xf5\xb1\xf2\x42\xc0\x38\x80\x0e\x2a\x62\xd3\xb7\xed\xd4\xaf\xff\x5d\x6c\x93\xa5\x66\x78\xfe\xd4\xf8\x19\x3b\x5b\xe6\xe5\xf1\xaa\xb7\xac\xf0\x1a\x65\xfc\x04\x21\xec\xa0\xba\xae\x45\xa9\xbd\xd0\x8e\x90\xb6\x17\x7f\xf1\xc3\x04\x73\xa6\x7d\x0d\x60\x2f\x5a\xb9\x53\xee', 2)

def main():
    user_input = [100,250,44,83]
    scope = cw.scope()
    target = cw.target(scope, cw.targets.SimpleSerial)
    scope.default_setup()
    cw.program_target(scope, cw.programmers.STM32FProgrammer, "crt-CWNANO.hex")

    # gen_signature (the obfuscated function) will upload the hex file, and use
    # the board as a coprocessor to compute the signature of user_input
    sig = gen_signature(target, user_input)
    print("Signature:", sig)

main()
